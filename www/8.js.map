{"version":3,"sources":["./src/app/pages/manage-competition-entries/manage-competition-entries.page.html","./src/app/models/ContestModel.ts","./src/app/pages/manage-competition-entries/manage-competition-entries-routing.module.ts","./src/app/pages/manage-competition-entries/manage-competition-entries.module.ts","./src/app/pages/manage-competition-entries/manage-competition-entries.page.scss","./src/app/pages/manage-competition-entries/manage-competition-entries.page.ts","./src/app/services/competition/competition.service.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Add/Update Competitions</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"compForm\\\">\\n    <input type=\\\"hidden\\\" [formControl]=\\\"competitionId\\\"/>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Category <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-select placeholder=\\\"--Select Category--\\\" [formControl]=\\\"competitionCategory\\\">\\n        <ion-select-option value=\\\"DALY\\\">Daily</ion-select-option>\\n        <ion-select-option value=\\\"WKLY\\\">Weekly</ion-select-option>\\n        <ion-select-option value=\\\"MTLY\\\">Monthly</ion-select-option>\\n        <ion-select-option value=\\\"YRLY\\\">Yearly</ion-select-option>\\n      </ion-select>\\n    </ion-item> \\n    <app-error [condition]=\\\"competitionCategory.touched && competitionCategory.invalid\\\" msg=\\\"Please select categoty.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter Title <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-input type=\\\"text\\\" [formControl]=\\\"title\\\" maxlength=\\\"100\\\" ></ion-input>\\n    </ion-item>\\n    <app-error [condition]=\\\"title.touched && title.invalid\\\" msg=\\\"Please enter title.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter Description <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-input type=\\\"text\\\" [formControl]=\\\"description\\\" maxlength=\\\"1000\\\"></ion-input>\\n    </ion-item>\\n    <app-error [condition]=\\\"description.touched && description.invalid\\\" msg=\\\"Please enter description.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter Start Date <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [formControl]=\\\"startTime\\\"></ion-datetime>\\n    </ion-item>\\n    <app-error [condition]=\\\"startTime.touched && startTime.invalid\\\" msg=\\\"Please enter start date.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter End Date <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [formControl]=\\\"endTime\\\"></ion-datetime>\\n    </ion-item>\\n    <app-error [condition]=\\\"endTime.touched && endTime.invalid\\\" msg=\\\"Please enter end date.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter Minimum Age <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-input type=\\\"tel\\\" [formControl]=\\\"minAge\\\" maxlength=\\\"2\\\"></ion-input>\\n    </ion-item>\\n    <app-error [condition]=\\\"minAge.touched && minAge.invalid\\\" msg=\\\"Please enter minimum age.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter Maximum Age <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-input type=\\\"tel\\\" [formControl]=\\\"maxAge\\\" maxlength=\\\"2\\\"></ion-input>\\n    </ion-item>\\n    <app-error [condition]=\\\"maxAge.touched && maxAge.invalid\\\" msg=\\\"Please enter maximum age.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Subscription Require? <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-select placeholder=\\\"--Select Subscription Require--\\\" [formControl]=\\\"isSubscriptionRequired\\\">\\n        <ion-select-option value=\\\"1\\\">Yes</ion-select-option>\\n        <ion-select-option value=\\\"0\\\">No</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <app-error [condition]=\\\"isSubscriptionRequired.touched && isSubscriptionRequired.invalid\\\" msg=\\\"Please enter seubscription required.\\\"></app-error>\\n    \\n    <ion-item *ngIf=\\\"isSubscriptionRequired.value == '1'\\\">\\n      <ion-label position=\\\"floating\\\">Enter Subscription Price <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-input type=\\\"tel\\\" [formControl]=\\\"subscriptionPrice\\\" maxlength=\\\"2\\\"></ion-input>\\n    </ion-item>\\n    <app-error [condition]=\\\"subscriptionPrice.touched && subscriptionPrice.invalid\\\" msg=\\\"Please enter subscription price.\\\"></app-error>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Status <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-select placeholder=\\\"--Select Status--\\\" [formControl]=\\\"isActive\\\">\\n        <ion-select-option value=\\\"1\\\">Active</ion-select-option>\\n        <ion-select-option value=\\\"0\\\">Inactive</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <app-error [condition]=\\\"isActive.touched && isActive.invalid\\\" msg=\\\"Please select status.\\\"></app-error>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Result Status <label style=\\\"color: red !important;\\\">*</label></ion-label>\\n      <ion-select placeholder=\\\"--Select Result Status--\\\" [formControl]=\\\"isWinnerAnnounced\\\" readonly=\\\"true\\\">\\n        <ion-select-option value=\\\"1\\\">Winner Announced</ion-select-option>\\n        <ion-select-option value=\\\"0\\\" selected=\\\"true\\\">Winner Not Announced</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <app-error [condition]=\\\"isWinnerAnnounced.touched && isWinnerAnnounced.invalid\\\" msg=\\\"Please select result status.\\\"></app-error>\\n\\n    <app-multi-file-upload [formControl]=\\\"compPhoto\\\" msg=\\\"Upload Competition Image\\\" id=\\\"uploadCompPhoto\\\" format=\\\"png, jpeg, jpg\\\"></app-multi-file-upload>\\n    <app-error [condition]=\\\"compPhoto.invalid\\\" msg=\\\"Please upload pompetition image.\\\" ></app-error>\\n\\n    <div class=\\\"ion-padding ion-justify-content-center\\\">\\n      <ion-button shape=\\\"round\\\" type=\\\"submit\\\"  expand=\\\"block\\\" (click)=\\\"saveComp()\\\" [disabled]=\\\"compForm.invalid\\\">\\n        <ion-icon name=\\\"cloud-upload\\\" slot=\\\"start\\\"></ion-icon>\\n        Save\\n      </ion-button>\\n    </div>\\n  </form>\\n</ion-content>\\n<!-- <app-footer></app-footer> -->\"","\nexport class ContestModel{\n    competitionId : any;\n\n    competitionCategory : any;\n\n    title : any;\n\n    description : any;\n\n    startTime : any;\n\n    endTime : any;\n\n    minAge : any;\n\n    maxAge : any;\n\n    isActive : any;\n\n    isSubscriptionRequired : any;\n\n    subscriptionPrice : any;\n\n    isUserEnrolled : boolean;\n\n    isWinnerAnnounced : any;\n\n    compPhoto : any;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageCompetitionEntriesPage } from './manage-competition-entries.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageCompetitionEntriesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageCompetitionEntriesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManageCompetitionEntriesPageRoutingModule } from './manage-competition-entries-routing.module';\n\nimport { ManageCompetitionEntriesPage } from './manage-competition-entries.page';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ManageCompetitionEntriesPageRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [ManageCompetitionEntriesPage]\n})\nexport class ManageCompetitionEntriesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21hbmFnZS1jb21wZXRpdGlvbi1lbnRyaWVzL21hbmFnZS1jb21wZXRpdGlvbi1lbnRyaWVzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UtilService } from 'src/app/services/util/util.service';\nimport { CompetitionService } from 'src/app/services/competition/competition.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ContestModel } from 'src/app/models/ContestModel';\nimport { ActivatedRoute } from '@angular/router';\nimport { IonVirtualScroll } from '@ionic/angular';\n\n@Component({\n  selector: 'app-manage-competition-entries',\n  templateUrl: './manage-competition-entries.page.html',\n  styleUrls: ['./manage-competition-entries.page.scss'],\n})\nexport class ManageCompetitionEntriesPage implements OnInit {\n  public compId;\n  public compForm : FormGroup;\n  constructor(private util: UtilService, private compSrvc : CompetitionService, public fb : FormBuilder, private ar: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.initializeCompForm();\n    \n    this.ar.params.subscribe(params => {\n      console.log('params -->',params);\n      this.compId = params['compId'];\n      if(this.compId && !isNaN(this.compId)){\n        this.compSrvc\n            .getCompetitionDetails(this.compId)\n            .subscribe(\n              res => this.compForm.patchValue(res)\n            )\n      }\n    });\n  }\n\n  initializeCompForm(){\n    this.compForm = this.fb.group({\n      'competitionId' : [''],\n      'competitionCategory' : ['', Validators.required],\n      'title' : ['', Validators.required],\n      'description' : ['', Validators.required],\n      'startTime' : ['', Validators.required],\n      'endTime' : ['', Validators.required],\n      'minAge' : ['', Validators.required],\n      'maxAge' : ['', Validators.required],\n      'isActive' : ['', Validators.required],\n      'isSubscriptionRequired' : ['', Validators.required],\n      'subscriptionPrice' : [''],\n      'isWinnerAnnounced' : ['', Validators.required],\n      'compPhoto' : ['' , Validators.required]\n    });\n\n    \n    this.isSubscriptionRequired\n        .valueChanges\n        .subscribe(value => {\n          if(value == '1'){\n            this.subscriptionPrice.setValidators(Validators.required);\n          }else{\n            this.subscriptionPrice.clearValidators();\n          }\n          this.subscriptionPrice.updateValueAndValidity();\n        });\n  }\n\n  get compPhoto(){\n    return this.compForm.get('compPhoto');\n  }\n\n  get competitionId(){\n    return this.compForm.get('competitionId');\n  }\n\n  get competitionCategory(){\n    return this.compForm.get('competitionCategory');\n  }\n\n  get title(){\n    return this.compForm.get('title');\n  }\n\n  get description(){\n    return this.compForm.get('description');\n  }\n\n  get startTime(){\n    return this.compForm.get('startTime');\n  }\n\n  get endTime(){\n    return this.compForm.get('endTime');\n  }\n\n  get minAge(){\n    return this.compForm.get('minAge');\n  }\n\n  get maxAge(){\n    return this.compForm.get('maxAge');\n  }\n\n  get isSubscriptionRequired(){\n    return this.compForm.get('isSubscriptionRequired');\n  }\n\n  get subscriptionPrice(){\n    return this.compForm.get('subscriptionPrice');\n  }\n\n  get isActive(){\n    return this.compForm.get('isActive');\n  }\n\n  get isWinnerAnnounced(){\n    return this.compForm.get('isWinnerAnnounced');\n  }\n\n  saveComp(){\n    console.log('form', this.compForm);\n    if(this.compForm.valid){\n      let comp = new ContestModel();\n      comp.competitionId = this.competitionId.value;\n      comp.competitionCategory = this.competitionCategory.value;\n      comp.title = this.title.value;\n      comp.description = this.description.value;\n      comp.startTime = this.startTime.value;\n      comp.endTime = this.endTime.value;\n      comp.minAge = this.minAge.value;\n      comp.maxAge = this.maxAge.value;\n      comp.isActive = this.isActive.value;\n      comp.isSubscriptionRequired = this.isSubscriptionRequired.value;\n      comp.compPhoto = this.compPhoto.value;\n      comp.isWinnerAnnounced = this.isWinnerAnnounced.value;\n      \n      if(this.isSubscriptionRequired.value == '1'){\n        comp.subscriptionPrice = this.subscriptionPrice.value;\n      }\n\n      this.compSrvc\n          .saveOrUpdateComp(comp)\n          .subscribe(\n            res => this.util.success('Competition details have been saved successfully.'),\n            err => this.util.errorHandler(err) \n          );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContestModel } from 'src/app/models/ContestModel';\nimport { UtilService } from '../util/util.service';\nimport { EnrollmentsModels } from 'src/app/models/EnrollmentsModels';\nimport { SearchModel } from 'src/app/models/SearchModel';\nimport { SubmittedEntriesModel } from 'src/app/models/SubmittedEntriesModel';\nimport { WinnerModel } from 'src/app/models/WinnerModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetitionService {\n\n  constructor(private util : UtilService) { }\n\n  getActiveCompetitions() : any{\n    return this.util.get<any>('competitions/active');\n  }\n\n  search(searchModel : SearchModel) : Observable<ContestModel[]>{\n    return this.util.post<ContestModel[]>('competitions/search', searchModel);\n  }\n\n  enrollInComp(compId){\n    return this.util.post(`competitions/enrollment/${compId}`, null);\n  }\n\n  getAllEnrolments(): Observable<EnrollmentsModels[]>{\n    return this.util.get<EnrollmentsModels[]>('competitions/enrollment');\n  }\n\n  getCompetitionDetails(compId) : Observable<ContestModel>{\n    return this.util.get<ContestModel>(`competitions/${compId}`);\n  }\n\n  attachFileToEnrolledCompetition(submittedEntryId : string, fileId : string){\n    return this.util.post(`competitions/enrollment/${submittedEntryId}/${fileId}`, null);\n  }\n\n  subscribeToCompetition(compId : string, payId : string){\n    return this.util.post(`competitions/subscribe/${compId}/${payId}`, null);\n  }\n\n  saveOrUpdateComp(comp : ContestModel){\n    return this.util.post(`competitions`, comp);\n  }\n\n  getAllSubmittedEntries(compId) :Observable<[]>{\n    return this.util.get(`competitions/enrollment/${compId}`);\n  }\n\n  getShortlistedEntries(compId) :Observable<[]>{\n    return this.util.get(`competitions/shortlisted/${compId}`);\n  }\n\n  markShortlisted(submittedEntryId) :Observable<[]>{\n    return this.util.post(`competitions/shortlist/${submittedEntryId}`, null);\n  }\n\n  markWinners(winnerList : SubmittedEntriesModel[]) :Observable<[]>{\n    return this.util.post(`competitions/winner`, winnerList);\n  }\n\n  getCompetitionWinners(compId) : Observable<WinnerModel[]>{\n    return this.util.get<WinnerModel[]>(`competitions/winners/${compId}`);\n  }\n\n  getAllCompetitionWinners() : Observable<WinnerModel[]>{\n    return this.util.get<WinnerModel[]>(`competitions/allwinners`);\n  }\n\n  createSubscriptionOrder(comp : ContestModel) : Observable<string>{\n    return this.util.post<string>(`competitions/subscribe/${comp.competitionId}`, null);\n  }\n\n  processPayment(orderId, payment_id) : Observable<string>{\n    return this.util.post<string>(`competitions/subscribe/${orderId}/${payment_id}/null/null`, null);\n  }\n\n  processPaymentError(orderId, errorCode, errorDesc) : Observable<string>{\n    return this.util.post<string>(`competitions/subscribe/${orderId}/null/${errorCode}/${errorDesc}`, null);\n  }\n}\n"],"sourceRoot":"webpack:///"}