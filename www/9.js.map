{"version":3,"sources":["./src/app/pages/manage-competitions/manage-competitions.page.html","./src/app/models/SearchModel.ts","./src/app/pages/manage-competitions/manage-competitions-routing.module.ts","./src/app/pages/manage-competitions/manage-competitions.module.ts","./src/app/pages/manage-competitions/manage-competitions.page.scss","./src/app/pages/manage-competitions/manage-competitions.page.ts","./src/app/services/competition/competition.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,kjFAAm/E,qBAAqB,sPAAsP,2CAA2C,yGAAyG,OAAO,GAAG,YAAY,oBAAoB,kBAAkB,oc;;;;;;;;;;;;;;;;ACA79F;IAAA;IAUA,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACVwC;AACc;AAEa;AAEpE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;AAMF;IAAA;IAAkD,CAAC;IAAtC,mCAAmC;QAJ/C,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mCAAmC,CAAG;IAAD,0CAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBP;AACM;AACmB;AAErB;AAE8C;AAEvB;AACpB;AAahD;IAAA;IAA2C,CAAC;IAA/B,4BAA4B;QAXxC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,uGAAmC;gBACnC,kEAAmB;gBACnB,2DAAY;aACb;YACD,YAAY,EAAE,CAAC,gFAAsB,CAAC;SACvC,CAAC;OACW,4BAA4B,CAAG;IAAD,mCAAC;CAAA;AAAH;;;;;;;;;;;;;ACtBzC;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACe;AACqB;AAE9B;AACC;AACuB;AACZ;AAOpE;IAOE,gCAAmB,IAAiB,EAAU,QAA6B,EAAS,EAAgB,EAAU,GAAsB,EAAS,EAAgB;QAA1I,SAAI,GAAJ,IAAI,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAqB;QAAS,OAAE,GAAF,EAAE,CAAc;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAS,OAAE,GAAF,EAAE,CAAc;QAL7J,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAoB,EAAE,CAAC;QACnC,oBAAe,GAAG,KAAK,CAAC;QAItB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,qDAAoB,GAApB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAG,CAAC,EAAE,CAAC;YACf,WAAW,EAAG,CAAC,EAAE,CAAC;YAClB,SAAS,EAAG,CAAC,EAAE,CAAC;YAChB,UAAU,EAAG,CAAC,EAAE,CAAC;YACjB,mBAAmB,EAAG,CAAC,EAAE,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,0CAAM;aAAV;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,6CAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAI,2CAAO;aAAX;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAI,4CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAED,sBAAI,qDAAiB;aAArB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAClD,CAAC;;;OAAA;IAED,yCAAQ,GAAR;IACA,CAAC;IAED,uCAAM,GAAN;QAAA,iBAwBC;QAvBC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,cAAc,GAAG,IAAI,sEAAW,EAAE,CAAC;QACvC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC1C,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAChD,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC5C,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC9C,cAAc,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAEhE,IAAI,CAAC,QAAQ;aACR,MAAM,CAAC,cAAc,CAAC;aACtB,SAAS,CACR,aAAG;YACD,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,aAAG;YACD,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CACF,CAAC;IACR,CAAC;;gBA7DwB,8EAAW;gBAAqB,mGAAkB;gBAAc,0DAAW;gBAAe,6FAAiB;gBAAa,iFAAY;;IAPlJ,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,yPAA8C;;SAE/C,CAAC;+EAQyB,8EAAW,EAAqB,mGAAkB,EAAc,0DAAW,EAAe,6FAAiB,EAAa,iFAAY;OAPlJ,sBAAsB,CAsElC;IAAD,6BAAC;CAAA;AAtEkC;;;;;;;;;;;;;;;;;;;ACdQ;AAGQ;AASnD;IAEE,4BAAoB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;IAAI,CAAC;IAE3C,kDAAqB,GAArB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qBAAqB,CAAC,CAAC;IACnD,CAAC;IAED,mCAAM,GAAN,UAAO,WAAyB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,qBAAqB,EAAE,WAAW,CAAC,CAAC;IAC5E,CAAC;IAED,yCAAY,GAAZ,UAAa,MAAM;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA2B,MAAQ,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,6CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,yBAAyB,CAAC,CAAC;IACvE,CAAC;IAED,kDAAqB,GAArB,UAAsB,MAAM;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,kBAAgB,MAAQ,CAAC,CAAC;IAC/D,CAAC;IAED,4DAA+B,GAA/B,UAAgC,gBAAyB,EAAE,MAAe;QACxE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA2B,gBAAgB,SAAI,MAAQ,EAAE,IAAI,CAAC,CAAC;IACvF,CAAC;IAED,mDAAsB,GAAtB,UAAuB,MAAe,EAAE,KAAc;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA0B,MAAM,SAAI,KAAO,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAED,6CAAgB,GAAhB,UAAiB,IAAmB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,mDAAsB,GAAtB,UAAuB,MAAM;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA2B,MAAQ,CAAC,CAAC;IAC5D,CAAC;IAED,kDAAqB,GAArB,UAAsB,MAAM;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA4B,MAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,4CAAe,GAAf,UAAgB,gBAAgB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA0B,gBAAkB,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IAED,wCAAW,GAAX,UAAY,UAAoC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;IAC3D,CAAC;IAED,kDAAqB,GAArB,UAAsB,MAAM;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,0BAAwB,MAAQ,CAAC,CAAC;IACxE,CAAC;IAED,qDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,yBAAyB,CAAC,CAAC;IACjE,CAAC;IAED,oDAAuB,GAAvB,UAAwB,IAAmB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,4BAA0B,IAAI,CAAC,aAAe,EAAE,IAAI,CAAC,CAAC;IACtF,CAAC;IAED,2CAAc,GAAd,UAAe,OAAO,EAAE,UAAU;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,4BAA0B,OAAO,SAAI,UAAU,eAAY,EAAE,IAAI,CAAC,CAAC;IACnG,CAAC;IAED,gDAAmB,GAAnB,UAAoB,OAAO,EAAE,SAAS,EAAE,SAAS;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,4BAA0B,OAAO,cAAS,SAAS,SAAI,SAAW,EAAE,IAAI,CAAC,CAAC;IAC1G,CAAC;;gBApE0B,8DAAW;;IAF3B,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,8DAAW;OAF3B,kBAAkB,CAuE9B;IAAD,yBAAC;CAAA;AAvE8B","file":"9.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Manage</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button [routerLink]=\\\"['/manage-competition-entries', '']\\\" *ngIf=\\\"ls.hasFunction('FUNC_VIEW_ADMIN_MENU')\\\">\\n        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title class=\\\"ion-text-center\\\">Search Criteria</ion-card-title>\\n      <ion-card-subtitle class=\\\"ion-text-center\\\" color=\\\"tertiary\\\">Enter/Select more values for refiend search</ion-card-subtitle>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Competition ID</ion-label>\\n        <ion-input maxlength=\\\"6\\\" type=\\\"tel\\\" [formControl]=\\\"compId\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Competition Start Date</ion-label>\\n        <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [formControl]=\\\"startDate\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Competition End Date</ion-label>\\n        <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" [formControl]=\\\"endDate\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Status</ion-label>\\n        <ion-select placeholder=\\\"--Select Status--\\\" [formControl]=\\\"isActive\\\">\\n          <ion-select-option value=\\\"1\\\">Active</ion-select-option>\\n          <ion-select-option value=\\\"0\\\">Inactive</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Result Status</ion-label>\\n        <ion-select placeholder=\\\"--Select Result Status--\\\" [formControl]=\\\"isWinnerAnnounced\\\">\\n          <ion-select-option value=\\\"1\\\">Winner Announced</ion-select-option>\\n          <ion-select-option value=\\\"0\\\">Winner Not Announced</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <br/>\\n      <div class=\\\"ion-text-center\\\">\\n        <ion-button shape=\\\"round\\\" (click)=\\\"search()\\\">\\n          <ion-icon name=\\\"search-outline\\\" slot=\\\"start\\\" ></ion-icon>\\n          Search\\n        </ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-list *ngIf=\\\"competitions.length > 0\\\">\\n    <ion-list-header class=\\\"ion-text-center\\\">\\n        <ion-label color=\\\"tertiary\\\">Showing All <b>{{competitions.length}}</b> Results</ion-label>\\n    </ion-list-header>\\n\\n    <ion-item button detail *ngFor=\\\"let comp of competitions let i = index\\\" [routerLink]=\\\"['/upload-entry', comp.competitionId]\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <img src=\\\"{{util.getFullUrl('file/') + comp.compPhoto}}\\\">\\n      </ion-thumbnail>\\n      <ion-label color=\\\"tertiary\\\" class=\\\"ion-text-wrap\\\">\\n        <h3>{{i + 1}} {{comp.title}}</h3>\\n        <p>{{comp.description}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n  <br/>\\n\\n  <ion-item *ngIf=\\\"showError && competitions.length < 1\\\">\\n    <ion-label color=\\\"danger\\\" class=\\\"ion-text-center\\\"><b>No Records Found.</b></ion-label>\\n  </ion-item>\\n\\n  <!-- Dots -->\\n  <div class=\\\"ion-text-center\\\" *ngIf=\\\"showProgressBar\\\">\\n    <ion-spinner name=\\\"dots\\\" color=\\\"primary\\\"></ion-spinner> \\n  </div>\\n\\n</ion-content>\\n<!-- <app-footer></app-footer> -->\"","export class SearchModel{\n    compId : string;\n\n    startDate: Date;\n\n    endDate: Date;\n\n    isActive: string;\n\n    isWinnerAnnounced: string;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageCompetitionsPage } from './manage-competitions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageCompetitionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageCompetitionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManageCompetitionsPageRoutingModule } from './manage-competitions-routing.module';\n\nimport { ManageCompetitionsPage } from './manage-competitions.page';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ManageCompetitionsPageRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [ManageCompetitionsPage]\n})\nexport class ManageCompetitionsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21hbmFnZS1jb21wZXRpdGlvbnMvbWFuYWdlLWNvbXBldGl0aW9ucy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UtilService } from 'src/app/services/util/util.service';\nimport { CompetitionService } from 'src/app/services/competition/competition.service';\nimport { ContestModel } from 'src/app/models/ContestModel';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { SearchModel } from 'src/app/models/SearchModel';\nimport { MasterDataService } from 'src/app/services/master/master-data.service';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n@Component({\n  selector: 'app-manage-competitions',\n  templateUrl: './manage-competitions.page.html',\n  styleUrls: ['./manage-competitions.page.scss'],\n})\nexport class ManageCompetitionsPage implements OnInit {\n\n  showError = false;\n  competitions : ContestModel[] = [];\n  showProgressBar = false;\n  public searchForm : FormGroup;\n\n  constructor(public util: UtilService, private compSrvc : CompetitionService, public fb : FormBuilder, private mst: MasterDataService, public ls: LoginService) { \n    this.initializeSearchForm();\n  }\n\n  initializeSearchForm(){\n    this.searchForm = this.fb.group({\n      'compId' : [''],\n      'startDate' : [''],\n      'endDate' : [''],\n      'isActive' : [''],\n      'isWinnerAnnounced' : ['']\n    });\n  }\n\n  get compId(){\n    return this.searchForm.get('compId');\n  }\n\n  get startDate(){\n    return this.searchForm.get('startDate');\n  }\n\n  get endDate(){\n    return this.searchForm.get('endDate');\n  }\n\n  get isActive(){\n    return this.searchForm.get('isActive');\n  }\n\n  get isWinnerAnnounced(){\n    return this.searchForm.get('isWinnerAnnounced');\n  }\n\n  ngOnInit() {\n  }\n\n  search(){\n    this.showProgressBar = true;\n    this.showError = false;\n    let searchCriteria = new SearchModel();\n    searchCriteria.compId = this.compId.value;\n    searchCriteria.startDate = this.startDate.value;\n    searchCriteria.endDate = this.endDate.value;\n    searchCriteria.isActive = this.isActive.value;\n    searchCriteria.isWinnerAnnounced = this.isWinnerAnnounced.value;\n\n    this.compSrvc\n        .search(searchCriteria)\n        .subscribe(\n          res => {\n            this.competitions = res;\n            this.showProgressBar = false;\n            this.showError = true;\n          },\n          err => {\n            this.competitions = [];\n            this.showProgressBar = false;\n            this.showError = true;\n          }\n        );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContestModel } from 'src/app/models/ContestModel';\nimport { UtilService } from '../util/util.service';\nimport { EnrollmentsModels } from 'src/app/models/EnrollmentsModels';\nimport { SearchModel } from 'src/app/models/SearchModel';\nimport { SubmittedEntriesModel } from 'src/app/models/SubmittedEntriesModel';\nimport { WinnerModel } from 'src/app/models/WinnerModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetitionService {\n\n  constructor(private util : UtilService) { }\n\n  getActiveCompetitions() : any{\n    return this.util.get<any>('competitions/active');\n  }\n\n  search(searchModel : SearchModel) : Observable<ContestModel[]>{\n    return this.util.post<ContestModel[]>('competitions/search', searchModel);\n  }\n\n  enrollInComp(compId){\n    return this.util.post(`competitions/enrollment/${compId}`, null);\n  }\n\n  getAllEnrolments(): Observable<EnrollmentsModels[]>{\n    return this.util.get<EnrollmentsModels[]>('competitions/enrollment');\n  }\n\n  getCompetitionDetails(compId) : Observable<ContestModel>{\n    return this.util.get<ContestModel>(`competitions/${compId}`);\n  }\n\n  attachFileToEnrolledCompetition(submittedEntryId : string, fileId : string){\n    return this.util.post(`competitions/enrollment/${submittedEntryId}/${fileId}`, null);\n  }\n\n  subscribeToCompetition(compId : string, payId : string){\n    return this.util.post(`competitions/subscribe/${compId}/${payId}`, null);\n  }\n\n  saveOrUpdateComp(comp : ContestModel){\n    return this.util.post(`competitions`, comp);\n  }\n\n  getAllSubmittedEntries(compId) :Observable<[]>{\n    return this.util.get(`competitions/enrollment/${compId}`);\n  }\n\n  getShortlistedEntries(compId) :Observable<[]>{\n    return this.util.get(`competitions/shortlisted/${compId}`);\n  }\n\n  markShortlisted(submittedEntryId) :Observable<[]>{\n    return this.util.post(`competitions/shortlist/${submittedEntryId}`, null);\n  }\n\n  markWinners(winnerList : SubmittedEntriesModel[]) :Observable<[]>{\n    return this.util.post(`competitions/winner`, winnerList);\n  }\n\n  getCompetitionWinners(compId) : Observable<WinnerModel[]>{\n    return this.util.get<WinnerModel[]>(`competitions/winners/${compId}`);\n  }\n\n  getAllCompetitionWinners() : Observable<WinnerModel[]>{\n    return this.util.get<WinnerModel[]>(`competitions/allwinners`);\n  }\n\n  createSubscriptionOrder(comp : ContestModel) : Observable<string>{\n    return this.util.post<string>(`competitions/subscribe/${comp.competitionId}`, null);\n  }\n\n  processPayment(orderId, payment_id) : Observable<string>{\n    return this.util.post<string>(`competitions/subscribe/${orderId}/${payment_id}/null/null`, null);\n  }\n\n  processPaymentError(orderId, errorCode, errorDesc) : Observable<string>{\n    return this.util.post<string>(`competitions/subscribe/${orderId}/null/${errorCode}/${errorDesc}`, null);\n  }\n}\n"],"sourceRoot":"webpack:///"}